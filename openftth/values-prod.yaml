cassandra:
  cluster:
    name: cassandra
    replicaCount: 3
    seedCount: 2
  dbUser:
    user: cassandra
    password:
    forcePassword: true
  persistence:
    storageClass: ""

strimzi:
  zookeeper:
    replicas: 3
    storage:
      size: 100Gi
      deleteClaim: true
  kafka:
    replicas: 3
    config:
      replicationFactorOffsets: 3
      replicationFactorStateLog: 3
      stateLogMinIsr: 2
    volumes:
      size: 100Gi
      deleteClaim: true
  external:
    type: loadbalancer
    tls: true
  topics:
    eventRouteNetwork:
      partitions: 1
      replicas: 3
    requestRouteNetwork:
      partitions: 1
      replicas: 3

api-gateway:
  replicas: 1
  storage: 1Gi
  loglevel: "Warning"
  serviceType: LoadBalancer
  storageClassName: ""

route-network-validator:
  loglevel: "Warning"
  writeToName: "Console"
  replicas: 1
  storage: 1Gi
  storageClassName: ""

  database:
    database: OPEN_FTTH
    username: postgres
    password: postgres
    port: 5432

route-network-service:
  replicas: 2
  loglevel: "Warning"

gdb-integrator:
  replicas: 1
  loglevel: "Warning"
  storage: 1Gi
  postgis:
    username: postgres
    password: postgres
  application:
    tolerance: "0.1"
    applicationName: "GDB_INTEGRATOR"

postgis-connector:
  replicas: 1
  bootstrapServers: kafka-cluster-kafka-bootstrap:9093
  replicationFactor:
    config: 1
    offset: 1
    status: 1
  tls:
    trustedCertificates:
      secretName: kafka-cluster-cluster-ca-cert
      certificate: ca.crt
  postgis:
    username: postgres
    password:

postgis:
  username: postgres
  password:
  serviceType: LoadBalancer
  volumeClaim:
    storageClassName: ""
    storage: 10Gi
