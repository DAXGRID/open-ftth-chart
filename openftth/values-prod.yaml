strimzi:
  zookeeper:
    replicas: 3
    storage:
      size: 10Gi
      deleteClaim: false
      storageClassName: ""
  kafka:
    replicas: 3
    config:
      autoCreateTopicsEnable: false
      replicationFactorOffsets: 3
      replicationFactorStateLog: 3
      stateLogMinIsr: 2
    storage:
      storageClassName: ""
      size: 10Gi
      deleteClaim: false
    external:
      type: ""
      tls: true
  topics:
    domainRouteNetwork:
      partitions: 1
      replicas: 3
    requestRouteNetwork:
      partitions: 1
      replicas: 3
    postgresConnectorRouteNetwork:
      partitions: 1
      replicas: 3
    notificationGeoGraphicalAreaUpdated:
      partitions: 1
      replicas: 3
    notificationUtilityNetwork:
      partitions: 1
      replicas: 3

api-gateway:
  replicas: 1
  loglevel: "Information"
  eventStoreDatabase:
    name: EVENT_STORE
    username: postgres
    password: postgres
  geoDatabase:
    name: OPEN_FTTH
    username: postgres
    password: postgres
  auth:
    host: ""
    requireHttps: true
    audience: "account"

route-network-validator:
  loglevel: "Information"
  replicas: 1
  resources:
    requests:
      memory: 1500Mi
    limits:
      memory: 3Gi

  database:
    database: OPEN_FTTH
    username: postgres
    password: postgres
    port: 5432

gdb-integrator:
  replicas: 1
  loglevel: "Information"
  storage: 1Gi
  postgis:
    username: postgres
    password: postgres
  application:
    tolerance: "0.01"
    applicationName: "GDB_INTEGRATOR"
    sendGeographicalAreaUpdatedNotification: true
    enableSegmentEndsAutoSnappingToRouteNode: true
  resources:
    requests:
      memory: 300Mi

postgis-connector:
  replicas: 1
  bootstrapServers: kafka-cluster-kafka-bootstrap:9093
  replicationFactor:
    config: 1
    offset: 1
    status: 1
  tls:
    trustedCertificates:
      secretName: kafka-cluster-cluster-ca-cert
      certificate: ca.crt
  postgis:
    username: postgres
    password:

frontend:
  replicas: 1
  desktopBridgeUri: ""
  apiGatewayHttpUri: ""
  apiGatewayWsUri: ""
  keyCloakUri: ""

postgis:
  username: postgres
  password:
  serviceType: LoadBalancer
  serviceAnnotations: {}
  volumeClaim:
    storageClassName: ""
    storage: 10Gi

postgis-basemap:
  username: postgres
  password: postgres
  serviceType: LoadBalancer
  serviceAnnotations: {}
  volumeClaim:
    storageClassName: ""
    storage: 10Gi
  resources:
    requests:
      memory: 1000Mi

desktop-bridge:
  replicas: 1
  loglevel: "Information"

ingress:
  tls:
    enabled: true
    acme:
      email: ""
      server: "https://acme-v02.api.letsencrypt.org/directory"
    hosts: {}
  domainNames:
    frontend: 
    desktopBridge:
    apiGateway: 
    auth: