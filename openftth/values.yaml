strimzi:
  zookeeper:
    replicas: 1
    storage:
      size: 10Gi
      deleteClaim: true
      storageClassName: ""
  kafka:
    replicas: 1
    config:
      autoCreateTopicsEnable: false
      replicationFactorOffsets: 1
      replicationFactorStatelog: 1
      stateLogMinIsr: 1
    storage:
      storageClassName: ""
      size: 10Gi
      deleteClaim: true
    external:
      type: nodeport
      tls: false
  topics:
    domainRouteNetwork:
      partitions: 1
      replicas: 1
    requestRouteNetwork:
      partitions: 1
      replicas: 1
    postgresConnectorRouteNetwork:
      partitions: 1
      replicas: 1
    notificationGeoGraphicalAreaUpdated:
      partitions: 1
      replicas: 1

api-gateway:
  replicas: 1
  storage: 1Gi
  loglevel: "Information"
  serviceType: LoadBalancer
  storageClassName: ""

route-network-validator:
  loglevel: "Information"
  replicas: 1
  resources:
    requests:
      memory: 0Mi
    limits:
      memory: 0Gi

  database:
    database: OPEN_FTTH
    username: postgres
    password: postgres
    port: 5432

route-network-service:
  replicas: 1
  loglevel: "Information"

gdb-integrator:
  replicas: 1
  loglevel: "Information"
  storage: 1Gi
  postgis:
    username: postgres
    password: postgres
  application:
    tolerance: "0.01"
    applicationName: "GDB_INTEGRATOR"
    sendGeographicalAreaUpdatedNotification: true
    enableSegmentEndsAutoSnappingToRouteNode: true
  resources:
    requests:
      memory: 0Mi

postgis-connector:
  replicas: 1
  bootstrapServers: kafka-cluster-kafka-bootstrap:9093
  replicationFactor:
    config: 1
    offset: 1
    status: 1
  tls:
    trustedCertificates:
      secretName: kafka-cluster-cluster-ca-cert
      certificate: ca.crt
  postgis:
    username: postgres
    password: postgres

frontend:
  replicas: 1
  serviceType: LoadBalancer
  mapbox:
    apiKey: ""
    styleUrl: ""
  desktopBridgeUri: ""
  apiGatewayUri: ""

postgis:
  username: postgres
  password: postgres
  serviceType: LoadBalancer
  serviceAnnotations: {}
  volumeClaim:
    storageClassName: ""
    storage: 10Gi

postgis-basemap:
  username: postgres
  password: postgres
  serviceType: LoadBalancer
  serviceAnnotations: {}
  volumeClaim:
    storageClassName: ""
    storage: 10Gi
  resources:
    requests:
      memory: 0Mi

kibana:
  elasticsearchHosts: http://openftth-elasticsearch-master:9200

elasticsearch:
  clusterName: "openftth-elasticsearch"
  antiAffinity: soft
  replicas: 1
  minimumMasterNodes: 1
  volumeClaimTemplate:
    resources:
      requests:
        storage: 10Gi

fluentd-elasticsearch:
  elasticsearch:
    hosts: ["openftth-elasticsearch-master:9200"]
