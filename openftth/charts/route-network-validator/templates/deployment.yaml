apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  labels:
    app: {{ .Release.Name }}-{{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Release.Name }}-{{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        readinessProbe:
          exec:
            command:
            - cat
            - /tmp/healthy
          initialDelaySeconds: 15
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
            - cat
            - /tmp/healthy
          initialDelaySeconds: 15
          periodSeconds: 15
        env:
        - name: SERILOG__MINIMUMLEVEL__DEFAULT
          value: {{ .Values.loglevel }}
        - name: SERILOG__WRITETO__NAME
          value: {{ .Values.writeToName }}

        - name: DATABASE__CONNECTIONSTRING
          valueFrom:
            secretKeyRef:
              key: connectionString
              name: {{ .Release.Name }}-{{ .Chart.Name }}-postgis
        - name: DATABASE__SCHEMA
          value: route_network_validator
        - name: DATABASE__ELEMENTNOTFEEDEDTABLENAME
          value: element_not_feeded

        - name: KAFKA__SERVER
          value: {{ .Release.Name }}-kafka-cluster-kafka-bootstrap:9092
        - name: KAFKA__ROUTENETWORKEVENTTOPIC
          value: event.route-network
        - name: KAFKA__POSITIONFILEPATH
          value: "/tmp/"
        volumeMounts:
        - mountPath: /data
          name: {{ .Release.Name }}-{{ .Chart.Name }}-data
      restartPolicy: Always
      volumes:
      - name: {{ .Release.Name }}-{{ .Chart.Name }}-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-{{ .Chart.Name }}
